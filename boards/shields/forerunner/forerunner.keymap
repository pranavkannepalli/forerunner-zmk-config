#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
                                &kp ESC    &kp N1    &kp N2    &kp N3     &kp N4     &kp N5               &kp N6     &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS    &kp EQUAL    &kp BSPC    &trans
                                &kp TAB    &kp Q     &kp W     &kp E      &kp R      &kp T                &kp Y      &kp U   &kp I      &kp O     &kp P     &kp LBKT     &kp RBKT     &kp BSLH    &trans
                                &kp CAPS   &kp A     &kp S     &kp D      &kp F      &kp G                &kp H      &kp J   &kp K      &kp L     &kp SEMI  &kp APOS     &kp RET      &kp UARW    &trans
                                &kp LSHFT  &kp Z     &kp X     &kp C      &kp V      &kp B                &kp N      &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHIFT   &trans       &trans      &trans
                                &kp LCTRL  &kp LGUI  &kp LALT  &kp SPACE  &trans   &trans                 &kp SPACE  &trans  &trans     &kp RALT  &mo 1     &kp RCTRL    &kp LARW     &kp DARW    &kp RARW

                        >;
                };
                lower_layer {
                        bindings = <
                                &kp GRAVE       &kp F1             &kp F2         &kp F3         &kp F4        &kp F5    &kp F6    &kp F7   &kp F8   &kp F9  &kp F10 &kp F11 &kp F12 &kp DEL &trans
                                &trans          &kp C_BRI_UP       &kp C_VOL_UP   &kp C_NEXT     &trans        &trans    &trans    &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans
                                &trans          &kp C_BRI_DN       &kp C_VOL_DN   &kp C_PREV     &bt BT_NXT    &trans    &trans    &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans
                                &trans          &trans             &kp C_MUTE     &kp C_PP       &bt BT_PRV    &trans    &trans    &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans
                                &trans          &trans             &trans         &trans         &trans        &trans    &trans    &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans
                        >;
                };
        };
};
